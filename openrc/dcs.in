#!@OPENRCDIR@/openrc-run

depend(){
 need localmount docker
 use net
}

# sub-service name: dcs.subsvc
SUBSVC=${RC_SVCNAME##dcs.}
if [ "${SUBSVC}" = "dcs" ]; then 
  exit 1;
  eerror "${RC_SVCNAME} require a sub-service";
fi

DCS_DIR="${DCS_DIR:-@DCS_DIR@}"
DCS_FILE="${DCS_FILE:-docker-compose.yml}"
DCS_CFG="${DCS_DIR}/${SUBSVC}/${DCS_FILE}"

command="${DOCKER_CMD:-/usr/bin/docker}"
command_args="compose -f ${DCS_CFG} up"
pidfile="/var/run/${RC_SVCNAME}.pid"
command_background=true

stop() {
  ebegin "Stopping docker compose ${SUBSVC}"
  "${command}" compose -f "${DCS_CFG}" down
  eend $?
}

checkconfig(){
  "${command}" compose -f "${DCS_CFG}" config -q
}

# From documentatoin : https://github.com/OpenRC/openrc/blob/master/service-script-guide.md
start_pre() {
  # If this isn't a restart, make sure that the user's config isn't
  # busted before we try to start the daemon (this will produce
  # better error messages than if we just try to start it blindly).
  #
  # If, on the other hand, this *is* a restart, then the stop_pre
  # action will have ensured that the config is usable and we don't
  # need to do that again.
  if [ "${RC_CMD}" != "restart" ] ; then
    checkconfig || return $?
  fi
}

stop_pre() {
  # If this is a restart, check to make sure the user's config
  # isn't busted before we stop the running daemon.
  if [ "${RC_CMD}" = "restart" ] ; then
      checkconfig || return $?
  fi
}
